//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChMonitoring.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ChMonitoring.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE html&gt;
        ///&lt;html&gt;
        ///&lt;head&gt;
        ///    &lt;title&gt;about monit&lt;/title&gt;
        ///&lt;/head&gt;
        ///&lt;body bgcolor=&quot;white&quot;&gt;
        ///    &lt;br&gt;
        ///    &lt;h1&gt;
        ///        &lt;center&gt;
        ///         &lt;a href=&apos;http://mmonit.com/monit/&apos;&gt;monit {MONIT_VERSION}&lt;/a&gt;
        ///     &lt;/center&gt;
        /// &lt;/h1&gt;
        /// &lt;ul&gt;
        ///    &lt;li style=&apos;padding-bottom: 10px;&apos;&gt;Copyright &amp;copy; 2001-2015 &lt;a href=&apos;http://tildeslash.com/&apos;&gt;Tildeslash Ltd&lt;/a&gt;. All Rights Reserved.&lt;/li&gt;
        ///&lt;/ul&gt;
        ///&lt;hr size=&apos;1&apos;&gt;
        ///&lt;p&gt;This program is free software; you can redistribute it and/or modify it under the terms of the GNU Affer [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AboutHtml {
            get {
                return ResourceManager.GetString("AboutHtml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;event&gt;
        ///	&lt;collected_sec&gt;{COLLECTED_SEC}&lt;/collected_sec&gt;
        ///	&lt;collected_usec&gt;{COLLECTED_USEC}&lt;/collected_usec&gt;
        ///	&lt;service&gt;{SOURCE_NAME}&lt;/service&gt;
        ///	&lt;type&gt;{SOURCE_TYPE}&lt;/type&gt;
        ///	&lt;id&gt;{EVENT_ID}&lt;/id&gt;
        ///	&lt;state&gt;{EVENT_STATE}&lt;/state&gt;
        ///	&lt;action&gt;{EVENT_DOACTION}&lt;/action&gt;
        ///	&lt;message&gt;&lt;![CDATA[{CDATA}]]&gt;&lt;/message&gt;
        ///	{TOKEN}
        ///&lt;/event&gt;.
        /// </summary>
        internal static string EventXml {
            get {
                return ResourceManager.GetString("EventXml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE html&gt;
        ///&lt;html&gt;
        ///&lt;head&gt;
        ///    &lt;title&gt;Monit: {TITEL}&lt;/title&gt;
        ///    &lt;style type=&quot;text/css&quot;&gt;
        ///    html, body {
        ///        height: 100%;
        ///        margin: 0;
        ///    }
        ///
        ///    body {
        ///        background-color: white;
        ///        font: normal normal normal 14px/18px &apos;HelveticaNeue&apos;, Helvetica, Arial, sans-serif;
        ///        color: #222;
        ///    }
        ///
        ///    h1 {
        ///        padding: 30px 0 10px 0;
        ///        text-align: center;
        ///        color: #222;
        ///        font-size: 28px;
        ///    }
        ///
        ///    h2 {
        ///        padding: 20px 0 10px 0;
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string HeaderFooterHtml {
            get {
                return ResourceManager.GetString("HeaderFooterHtml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///{HEAD}
        ///		&lt;uptime&gt;{PROCESS_UPTIME}&lt;/uptime&gt;
        ///		&lt;poll&gt;{POLLTIME}&lt;/poll&gt;
        ///		&lt;startdelay&gt;{STARTDELAY}&lt;/startdelay&gt;
        ///		&lt;localhostname&gt;{HOST_NAME}&lt;/localhostname&gt;
        ///		&lt;controlfile&gt;{CONTROL_FILE}&lt;/controlfile&gt;
        ///		{HTTPD}
        ///	&lt;/server&gt;
        ///	&lt;platform&gt;
        ///		&lt;name&gt;{SYSTEM_NAME}&lt;/name&gt;
        ///		&lt;release&gt;{SYSTEM_RELEASE}&lt;/release&gt;
        ///		&lt;version&gt;{SYSTEM_VERSION}&lt;/version&gt;
        ///		&lt;machine&gt;{SYSTEM_MACHINE}&lt;/machine&gt;
        ///		&lt;cpu&gt;{SYSTEM_CPUS}&lt;/cpu&gt;
        ///    &lt;memory&gt;{SYSTEM_MEM}&lt;/memory&gt;
        ///		&lt;swap&gt;{SYSTEM_SWAP}&lt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string HeaderFooterXml {
            get {
                return ResourceManager.GetString("HeaderFooterXml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;table id=&apos;header&apos; width=&apos;100%%&apos;&gt;
        ///	&lt;tr&gt;
        ///		&lt;td colspan=2 valign=&apos;top&apos; align=&apos;left&apos; width=&apos;100%%&apos;&gt;
        ///			&lt;h1&gt;Monit Service Manager&lt;/h1&gt;
        ///			&lt;p align=&apos;center&apos;&gt;Monit is &lt;a href=&apos;_runtime&apos;&gt;running&lt;/a&gt; on {SYSTEM_NAME} with &lt;i&gt;uptime, {UPTIME}&lt;/i&gt; and monitoring:&lt;/p&gt;&lt;br&gt;
        ///		&lt;/td&gt;
        ///	&lt;/tr&gt;
        ///&lt;/table&gt;
        ///{CENTER}.
        /// </summary>
        internal static string HomeHtml {
            get {
                return ResourceManager.GetString("HomeHtml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;h2&gt;Monit runtime status&lt;/h2&gt;
        ///&lt;table id=&apos;status-table&apos;&gt;
        ///    &lt;tr&gt;
        ///        &lt;th width=&apos;40%%&apos;&gt;Parameter&lt;/th&gt;
        ///        &lt;th width=&apos;60%%&apos;&gt;Value&lt;/th&gt;
        ///    &lt;/tr&gt;
        ///    &lt;tr&gt;&lt;td&gt;Monit ID&lt;/td&gt;&lt;td&gt;{MONIT_ID}&lt;/td&gt;&lt;/tr&gt;
        ///    &lt;tr&gt;&lt;td&gt;Host&lt;/td&gt;&lt;td&gt;{HOST_NAME}&lt;/td&gt;&lt;/tr&gt;
        ///    &lt;tr&gt;&lt;td&gt;Process id&lt;/td&gt;&lt;td&gt;{PROCESS_ID}&lt;/td&gt;&lt;/tr&gt;
        ///    &lt;tr&gt;
        ///        &lt;td&gt;Effective user running Monit&lt;/td&gt;
        ///        &lt;td&gt;{USER}&lt;/td&gt;
        ///    &lt;/tr&gt;
        ///    &lt;tr&gt;&lt;td&gt;Controlfile&lt;/td&gt;&lt;td&gt;{CONTROL_FILE}&lt;/td&gt;&lt;/tr&gt;
        ///    {LOG_FILE}
        ///    &lt;tr&gt;&lt;td&gt;Pidfile&lt;/td&gt;&lt;td&gt;{PID_F [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RuntimeHtml {
            get {
                return ResourceManager.GetString("RuntimeHtml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;servicegroup name=&quot;{NAME}&quot;&gt;
        ///	{CENTER}
        ///&lt;/servicegroup&gt;.
        /// </summary>
        internal static string ServiceGroupXml {
            get {
                return ResourceManager.GetString("ServiceGroupXml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;h2&gt;{SERVICE_TYPE} status&lt;/h2&gt;
        ///&lt;table id=&apos;status-table&apos;&gt;
        ///    &lt;tr&gt;
        ///        &lt;th width=&apos;30%%&apos;&gt;Parameter&lt;/th&gt;
        ///        &lt;th width=&apos;70%%&apos;&gt;Value&lt;/th&gt;
        ///    &lt;/tr&gt;
        ///    &lt;tr&gt;
        ///        &lt;td&gt;Name&lt;/td&gt;
        ///        &lt;td&gt;{SERVICE_NAME}&lt;/td&gt;
        ///    &lt;/tr&gt;
        ///    {SERVICE_TYPE_DESCR}
        ///    &lt;tr&gt;
        ///        &lt;td&gt;Status&lt;/td&gt;
        ///        &lt;td&gt;
        ///            {SERVICE_STATUS}
        ///        &lt;/td&gt;
        ///    &lt;/tr&gt;
        ///    {SERVICE_GROUP}
        ///    &lt;tr&gt;&lt;td&gt;Monitoring mode&lt;/td&gt;&lt;td&gt;{MONITORING_MODE}&lt;/td&gt;&lt;/tr&gt;
        ///    &lt;tr&gt;&lt;td&gt;Monitoring status&lt;/td&gt;&lt;td&gt;{MONITORING_STATUS}&lt;/t [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ServiceHtml {
            get {
                return ResourceManager.GetString("ServiceHtml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {HEAD}
        ///	&lt;collected_sec&gt;{COLLECTED_SEC}&lt;/collected_sec&gt;
        ///	&lt;collected_usec&gt;{COLLECTED_USEC}&lt;/collected_usec&gt;
        ///	&lt;status&gt;{ERROR}&lt;/status&gt;
        ///	&lt;status_hint&gt;{HINT}&lt;/status_hint&gt;
        ///	&lt;monitor&gt;{MONITOR}&lt;/monitor&gt;
        ///	&lt;monitormode&gt;{MODE}&lt;/monitormode&gt;
        ///	&lt;pendingaction&gt;{DOACTION}&lt;/pendingaction&gt;
        ///	{EVERY}
        ///	{CENTER}
        ///&lt;/service&gt;.
        /// </summary>
        internal static string ServiceXml {
            get {
                return ResourceManager.GetString("ServiceXml", resourceCulture);
            }
        }
    }
}
